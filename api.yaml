openapi: 3.0.0
info:
  title: Page Prowler API
  version: 1.0.0
  contact:
   name: Russell Jones
   email: jonesrussell42@gmail.com
servers:
  - url: https://localhost:3000/v1
paths:
  /ping:
    get:
      summary: Ping the server
      description: This operation checks if the server is up and running.
      responses:
        "200":
          description: Server is up
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /matchlinks:
    get:
     summary: Get all matching tasks
     description: This operation retrieves all matching tasks.
     responses:
       "200":
         description: Matching tasks retrieved
         content:
           application/json:
             schema:
               type: array
               items:
                $ref: '#/components/schemas/Task'
       "400":
         $ref: "#/components/responses/DefaultError"
       "500":
         $ref: "#/components/responses/DefaultError"
    post:
      summary: Create a new matching task
      description: This operation creates a new matching task.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                URL:
                  type: string
                SearchTerms:
                  type: string
                CrawlSiteID:
                  type: string
                MaxDepth:
                  type: integer
                Debug:
                  type: boolean
      responses:
        "201":
          description: Matching task created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          $ref: "#/components/responses/DefaultError"
        "500":
          $ref: "#/components/responses/DefaultError"
  /matchlinks/{id}:
    get:
      summary: Get the details of a matching task
      description: This operation retrieves the details of a matching task for a given ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the matching task to retrieve.
      responses:
        "200":
          description: Matching task retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "400":
          $ref: "#/components/responses/DefaultError"
        "500":
          $ref: "#/components/responses/DefaultError"
    delete:
      summary: Delete the matching task
      description: This operation deletes the matching task for a given ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the matching task to delete.
      responses:
        "200":
          description: Matching task deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          $ref: "#/components/responses/DefaultError"
        "500":
          $ref: "#/components/responses/DefaultError"
  /getlinks:
    get:
      summary: Get the list of links for a given siteid
      description: This operation retrieves the list of links for a given siteid.
      parameters:
        - name: siteid
          in: query
          required: true
          schema:
            type: string
          description: The ID of the crawl site to retrieve links for.
      responses:
        "200":
          description: Links retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
        "400":
          $ref: "#/components/responses/DefaultError"
        "500":
          $ref: "#/components/responses/DefaultError"
components:
  schemas:
    Output:
      type: object
      properties:
        siteid:
          type: string
        timestamp:
          type: string
          format: date-time
        status:
          type: string
        message:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    Link:
      type: object
      properties:
        url:
          type: string
        matching_terms:
          type: array
          items:
            type: string
    Task:
      type: object
      properties:
        Type:
          type: string
        Payload:
          type: string
        ID:
          type: string
        Queue:
          type: string
        Retries:
          type: integer
        ErrMsg:
          type: string
        LastErr:
          type: string
        Timeout:
          type: string
          format: duration
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
  responses:
    DefaultError:
      description: An unexpected error occurred.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

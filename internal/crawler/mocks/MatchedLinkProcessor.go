// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	crawler "github.com/jonesrussell/page-prowler/internal/crawler"
	mock "github.com/stretchr/testify/mock"
)

// MatchedLinkProcessor is an autogenerated mock type for the MatchedLinkProcessor type
type MatchedLinkProcessor struct {
	mock.Mock
}

// AppendResult provides a mock function with given fields: options, pageData
func (_m *MatchedLinkProcessor) AppendResult(options *crawler.CrawlOptions, pageData crawler.PageData) {
	_m.Called(options, pageData)
}

// HandleMatchingLinks provides a mock function with given fields: href
func (_m *MatchedLinkProcessor) HandleMatchingLinks(href string) error {
	ret := _m.Called(href)

	if len(ret) == 0 {
		panic("no return value specified for HandleMatchingLinks")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(href)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IncrementMatchedLinks provides a mock function with given fields: options
func (_m *MatchedLinkProcessor) IncrementMatchedLinks(options *crawler.CrawlOptions) {
	_m.Called(options)
}

// UpdatePageData provides a mock function with given fields: pageData, href, matchingTerms
func (_m *MatchedLinkProcessor) UpdatePageData(pageData *crawler.PageData, href string, matchingTerms []string) {
	_m.Called(pageData, href, matchingTerms)
}

// NewMatchedLinkProcessor creates a new instance of MatchedLinkProcessor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMatchedLinkProcessor(t interface {
	mock.TestingT
	Cleanup(func())
}) *MatchedLinkProcessor {
	mock := &MatchedLinkProcessor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
